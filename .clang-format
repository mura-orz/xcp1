BasedOnStyle: Google
AccessModifierOffset: -4
AlignAfterOpenBracket: AlwaysBreak
# AlignArrayOfStructures: Right (clang-format-13)
AlignConsecutiveAssignments: Consecutive
AlignConsecutiveBitFields: Consecutive
AlignConsecutiveDeclarations: Consecutive
AlignConsecutiveMacros: Consecutive
AlignEscapedNewlines: Right
AlignOperands: AlignAfterOperator
AlignTrailingComments: true
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Always
AllowShortCaseLabelsOnASingleLine: true
AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: All
AllowShortIfStatementsOnASingleLine: WithoutElse
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: true
AlwaysBreakAfterReturnType: None # TopLevelDefinitions
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: Yes
# AttributeMacros: []
BinPackArguments: true
BinPackParameters: true
BitFieldColonSpacing: After
BraceWrapping:
  AfterCaseLabel: false
  AfterClass: false
  AfterControlStatement: Never
  AfterEnum: false
  AfterFunction: false
  AfterNamespace: false
  AfterObjCDeclaration: false
  AfterStruct: false
  AfterUnion: false
  AfterExternBlock: false
  BeforeCatch: false
  BeforeElse: false
  BeforeLambdaBody: false
  BeforeWhile: false
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false
BreakAfterJavaFieldAnnotations: true
BreakBeforeBinaryOperators: All
BreakBeforeBraces: Custom
BreakBeforeConceptDeclarations: false
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: AfterColon
BreakInheritanceList: AfterColon
BreakStringLiterals: false
ColumnLimit: 0
# CommentPragmas
CompactNamespaces: true
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
DeriveLineEnding: false
DerivePointerAlignment: false
DisableFormat: false
# EmptyLineAfterAccessModifier: Never (clang-format-14)
EmptyLineBeforeAccessModifier: LogicalBlock
# ExperimentalAutoDetectBinPacking
FixNamespaceComments: true
ForEachMacros: ['FOREACH', 'BOOST_FOREACH']
# IfMacros: []
IncludeBlocks: Preserve
IncludeCategories:
  - Regex:           '^"[[:alnum:]./]+"'
    Priority:        2
    SortPriority:    2
  - Regex:           '<[[:alnum:]./]+>'
    Priority:        3
    SortPriority:    2
  - Regex:           '.*'
    Priority:        1
    SortPriority:    0
# IncludeIsMainRegex: ''
# IncludeIsMainSourceRegex: ''
# IndentAccessModifiers: false (clang-format-13)
IndentCaseBlocks: false
IndentCaseLabels: false
IndentExternBlock: NoIndent
IndentGotoLabels: false
IndentPPDirectives: None
IndentRequires: true
IndentWidth: 4
IndentWrappedFunctionNames: false
InsertTrailingCommas: None
# JavaImportGroups: ['com', 'org', 'jp.co']
# JavaScriptQuotes : Single
# JavaScriptWrapImports: false
KeepEmptyLinesAtTheStartOfBlocks: false
# LambdaBodyIndentation: Signature (clang-format-13)
Language: Cpp
# MacroBlockBegin: ''
# MacroBlockEnd: ''
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
# NamespaceMacros: []
# ObjCBinPackProtocolList
# ObjCBlockIndentWidth
# ObjCBreakBeforeNestedBlockParam
# ObjCSpaceAfterProperty
# ObjCSpaceBeforeProtocolList
# PPIndentWidth: 2 (clang-format-14)
# PackConstructorInitializers: NextLine
PenaltyBreakAssignment: 10
PenaltyBreakBeforeFirstCallParameter:  10
PenaltyBreakComment: 10
PenaltyBreakFirstLessLess: 10
PenaltyBreakString: 10
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 10
PenaltyIndentedWhitespace: 10
PenaltyReturnTypeOnItsOwnLine: 10
PointerAlignment: Left
# QualifierAlignment: None (clang-format-14)
# QualifierOrder: []
# RawStringFormats
# ReferenceAlignment: Left
ReflowComments: true
# ShortNamespaceLines: 0
SortIncludes: true
# SortJavaStaticImport
SortUsingDeclarations: true
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: true
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens:  ControlStatements
# SpaceBeforeParensOptions: (clang-format-14)
#  AfterControlStatements: true
#  AfterForeachMacros: false
#  AfterFunctionDeclarationName: false
#  AfterFunctionDefinitionName: false
#  AfterIfMacros: false
#  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: false
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 4
# SpacesInAngles: Never (clang-format-14)
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: false
# SpacesInLineCommentPrefix: (clang-format-14)
#  Minimum: 1
#  Maximum: -1
SpacesInParentheses: false
SpacesInSquareBrackets: false
Standard: Auto
# StatementAttributeLikeMacros: []
# StatementMacros: []
TabWidth: 4
# TypenameMacros: []
UseCRLF: false
UseTab: Always
#WhitespaceSensitiveMacros: []